name: publish
on:
  push:
  workflow_dispatch:
env:
  GITHUB_REPOSITORY: ${{ github.repository }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_BUILD_NUMBER: ${{github.run_number}}
  GITHUB_ACTOR: ${{ github.actor }}

jobs:
  publish:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: setup java
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - run: git tag ${{github.run_number}}
      - name: Execute Gradle build
        run: ./gradlew publish
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: publish
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          git remote set-url origin https://${{github.actor}}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          mkdir libraries || true
          echo "com.github.Minestom:minestom:${{github.run_number}}
          https://\$_ACTOR:\$_TOKEN@maven.pkg.github.com/FreedyPlugins/Minestom" > ./libraries/release
          git add .
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"        
          git commit -m "Release ${{github.run_number}}"
          git push origin publish
      - name: release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          title: "Build #${{github.run_number}}"
          automatic_release_tag: "${{github.run_number}}"
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          files: build/libs/*.jar
          prerelease: false
      - run: |

          sudo apt install maven -y
          git clone -b ${GITHUB_REF##*/} --single-branch https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          cd $(basename ${{ github.repository }} /)
            function mirror() {
            echo "---" 
            echo $1
            echo $2
            echo $3
            artifact=$1
            repoUrl=$2
            artifactId=$3
            rm -rf _work
            mkdir _work
            cd _work
            git init
            git config --global user.name "${{ github.actor }}"
            git config --global user.email "${{ github.actor }}@users.noreply.github.com"
            mvn org.apache.maven.plugins:maven-dependency-plugin:3.4.0:get --quiet --update-snapshots -Dartifact="$artifact" -DremoteRepositories="$repoUrl" -Dmaven.repo.local="." -Dmaven.home="."
            git add .
            git commit -m "install done" --quiet
            git branch $artifactId --quiet
            git switch $artifactId --quiet
            git push https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} $artifactId --force && true --quiet
            cd ..
          }

          cd libraries
          for filename in *; do
          rm -rf $filename-clone
          cp -r $filename $filename-clone
          filename=$filename-clone
          artifact=$(head -n 1 $filename)
          tail -n +2 "$filename" > $filename-clone
          rm -r $filename
          mv $filename-clone $filename
          echo $(sed ':a;N;$!ba;s/\n/,/g' $filename) > $filename
          repoUrl=$(head $filename)
          echo $repoUrl > $filename 
          echo $(sed "s/\$_ACTOR/$GITHUB_ACTOR/g" $filename) > $filename
          echo $(sed "s/\$_TOKEN/$GITHUB_TOKEN/g" $filename) > $filename
          repoUrl=$(head $filename)
          cd ..
          mirror "$artifact" "$repoUrl" $(basename $filename '-clone')
          cd libraries
          done
          cd ..